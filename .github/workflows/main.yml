# Derived from an example provided by https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
#
#
#
#
name: Deploy
on: [push]
jobs:
  deploy:
    name: "Deploy to server"
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
      - name: Check out the source, compile, and test
        run: |
        # This is done on the runner.  I am not sure at this point if this
        # will run on the target system.  Suspect yes.
           java --version
           mvn --version
           git  --version
           git clone https://github.com/BudDavis/${{github.event.repository.name}}
           cd TicTacToe
           mvn  --no-transfer-progress package
           
      - name: Stop the server
        run: |
           ssh production "systemctl --user stop  twsg.service"
           scp -r TicTacToe/ production
           ssh production "systemctl --user status"
           # % git clone https://github.com/utastudents/cse3310_su23_group_3 
           # % ssh su23_group3@cse3310.org "systemctl --user stop webchat.service" 
           # scp -r cse3310_su23_group_3 su23_group3@cse3310.org:. 
           # % ssh su23_group3@cse3310.org "cd cse3310_su23_group_3;cd demo;mvn clean#;mvn
           # sysstemctl --user start webchat.service" 
           # %  ssh su23_group3@cse3310.org "systemctl --user status webchat.service" 

           # get the java ready
#rm -rf $HOME/.m2
#mvn clean
#mvn compile
#mvn package
#echo "------ Java Compile Complete"

# kill the running service
#systemctl --user stop  ${1}.service
#echo "------ Service Stopped"

# replace the systemd file
#mkdir --parents $HOME/.config/systemd/user
#cp -f scripts/${1}.service $HOME/.config/systemd/user/${1}.service
#systemctl --user daemon-reload
#echo "------ systemd unit file replaced"

# restart the running service
#systemctl --user start  ${1}.service
#echo "------ service restarted"
#systemctl --user status ${1}.service
#echo "------ Done"


           
      - name: Start the server
        if: ${{ always() }}
        run: ssh production ls
