# Derived from an example provided by https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
#
#
#
#
name: Deploy
on: [push]
jobs:
  deploy:
    name: "Deploy to server"
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: Check out the source, compile, and test
        run: |
           java --version
           mvn --version
           git  --version
           cat >>servicefile <<END
           [Unit]
           Description=webpoker
           [Service]
           Type=simple
           Restart=always
           RestartSec=5
           ExecStart=mvn exec:java -Dexec.mainClass=uta.cse3310.App
           WorkingDirectory=/home/sp24_group1/TicTacToe 
           END
           ls
           cat servicefile
           #ssh production mkdir --parents /home/sp24_group1/.config/systemd/user
           #scp production servicefile  /home/sp24_group1/.config/systemd/user/servicefile
           #ssh systemctl --user daemon-reload
           #ssh systemctl --user restart tictactoe.service
           #ssh systemctl --user status tictactoe.service
                   
      - name: Start the server
        if: ${{ always() }}
        run: ssh production ls
